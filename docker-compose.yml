version: "3"

services:
  minio:
    image: quay.io/minio/minio
    container_name: minio1
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    user: "${UID}:${GID}"
    volumes:
      - ${HOME}/minio/data:/data
    environment:
      MINIO_ROOT_USER: ROOTNAME
      MINIO_ROOT_PASSWORD: CHANGEME123
    command: server /data --console-address ":9001"
    networks:
      - mlflow_network

  minio_mc:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 ROOTNAME CHANGEME123); do echo 'Waiting for MinIO...' && sleep 1; done;
      /usr/bin/mc mb myminio/flow-bucket;
      cat > /tmp/flow-data-rw.json <<EOF
      {
        \"Version\": \"2012-10-17\",
        \"Statement\": [
          {
            \"Effect\": \"Allow\",
            \"Action\": [\"s3:GetObject\", \"s3:PutObject\", \"s3:DeleteObject\"],
            \"Resource\": [\"arn:aws:s3:::flow-bucket/*\"]
          },
          {
            \"Effect\": \"Allow\",
            \"Action\": [\"s3:ListBucket\"],
            \"Resource\": [\"arn:aws:s3:::flow-bucket\"]
          }
        ]
      }
      EOF
      /usr/bin/mc admin policy create myminio flow-data-rw /tmp/flow-data-rw.json;
      /usr/bin/mc admin user add myminio MLFlowUser MyFlowPass;
      /usr/bin/mc admin group add myminio flow-users MLFlowUser;
      /usr/bin/mc admin policy attach myminio flow-data-rw --group=flow-users;
      /usr/bin/mc alias set myflowuser http://minio:9000 MLFlowUser MyFlowPass;
      exit 0;"
    networks:
      - mlflow_network

networks:
  mlflow_network:
    driver: bridge
